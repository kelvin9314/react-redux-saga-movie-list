{"version":3,"sources":["redux/constants/index.js","redux/reducers/counter.js","redux/reducers/movies.js","redux/reducers/loading.js","redux/reducers/error.js","redux/reducers/page.js","redux/reducers/index.js","lib/api.js","redux/actions/index.js","redux/saga/moviesSaga.js","components/card.js","components/card-list.js","view/movies.js","index.js"],"names":["COUNTER","MOVIES","LOAD","LOAD_SUCCESS","LOAD_FAIL","initalState","amount","name","counter","state","action","type","count","movies","loading","error","err","page","rootReducer","combineReducers","isLoading","nextPage","fetchMovies","a","async","axios","get","process","res","loadMovies","setMovies","setError","handleMoviesLoad","watchMoviesLoad","getPage","select","console","log","call","data","put","results","toString","takeEvery","Card","movie","className","alt","title","width","src","poster_path","style","textAlign","release_date","CardList","map","key","id","Movies","dispatch","useDispatch","useSelector","stateError","handleScroll","current","window","innerHeight","document","documentElement","scrollTop","height","offsetHeight","useEffect","addEventListener","removeEventListener","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","devToolsEnhancer","run","rootSaga","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.920b567a.chunk.js","sourcesContent":["const COUNTER = {\r\n  ADD: \"COUNTER_ADD\",\r\n  RESET: \"COUNTER_RESET\"\r\n};\r\n\r\nconst MOVIES = {\r\n  LOAD: \"MOVIES_LOAD\",\r\n  LOAD_SUCCESS: \"MOVIES_LOAD_SUCCESS\",\r\n  LOAD_FAIL: \"MOVIES_LOAD_FAIL\"\r\n};\r\n\r\nconst STATS = {\r\n  LOAD: \"STATS_LOAD\",\r\n  LOAD_SUCCESS: \"STATS_LOAD_SUCCESS\",\r\n  LOAD_FAIL: \"STATS_LOAD_FAIL\"\r\n};\r\n\r\nexport { COUNTER, MOVIES, STATS };\r\n","import { COUNTER } from \"../constants\";\r\n\r\nconst initalState = {\r\n  amount: 0,\r\n  name: \"kelvin\"\r\n};\r\n\r\nconst counter = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case COUNTER.ADD:\r\n      return {\r\n        amount: action.count\r\n      };\r\n    case COUNTER.RESET:\r\n      return {\r\n        amount: action.count\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counter;\r\n","import { MOVIES } from \"../constants\";\r\n\r\nconst movies = (state = [], action) => {\r\n  if (action.type === MOVIES.LOAD_SUCCESS) {\r\n    return [...state, ...action.movies];\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default movies;\r\n","import { MOVIES } from \"../constants\";\r\n\r\nconst loading = (state = false, action) => {\r\n  switch (action.type) {\r\n    case MOVIES.LOAD:\r\n      return true;\r\n    case MOVIES.LOAD_SUCCESS:\r\n      return false;\r\n    case MOVIES.LOAD_FAIL:\r\n      return false;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loading;\r\n","import { MOVIES } from \"../constants\";\r\n\r\nconst error = (state = null, action) => {\r\n  switch (action.type) {\r\n    case MOVIES.LOAD_FAIL:\r\n      return action.err;\r\n    case MOVIES.LOAD:\r\n    case MOVIES.LOAD_SUCCESS:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default error;\r\n","import { MOVIES } from \"../constants\";\r\n\r\nconst page = (state = 1, action) => {\r\n  switch (action.type) {\r\n    case MOVIES.LOAD_SUCCESS:\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default page;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport counter from \"./counter\";\r\nimport movies from \"./movies\";\r\nimport loading from \"./loading\";\r\nimport error from \"./error\";\r\nimport page from \"./page\";\r\n\r\nconst rootReducer = combineReducers({\r\n  counter,\r\n  movies,\r\n  isLoading: loading,\r\n  error,\r\n  nextPage: page\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\n\r\n// console.log(process.env.REACT_APP_API_TOEKN);\r\nconst BASE_URL = \"https://api.themoviedb.org/3/movie\";\r\n\r\nexport const fetchMovies = async page => {\r\n  // const data = await axios.get(\r\n  //   `${BASE_URL}/now_playin?api_key=${\r\n  //     process.env.REACT_APP_API_TOEKN\r\n  //   }&language=zh-TW&page=${page}`\r\n  // );\r\n\r\n  // console.log(data);\r\n  // if (data.status >= 400) {\r\n  //   throw new Error(data.errors);\r\n  // }\r\n  // return data;\r\n\r\n  try {\r\n    const res = await axios.get(\r\n      `${BASE_URL}/now_playing?api_key=${\r\n        process.env.REACT_APP_API_TOEKN\r\n      }&language=zh-TW&page=${page}`\r\n    );\r\n    return res;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","import { COUNTER, MOVIES, STATS } from \"../constants\";\r\n\r\nlet count = 0;\r\n\r\nexport const addCounter = () => {\r\n  return {\r\n    type: COUNTER.ADD,\r\n    count: ++count\r\n  };\r\n};\r\n\r\nexport const resetCounter = () => {\r\n  count = 0;\r\n  return {\r\n    type: COUNTER.RESET,\r\n    count: 0\r\n  };\r\n};\r\n\r\nexport const loadMovies = () => ({\r\n  type: MOVIES.LOAD\r\n});\r\n\r\nexport const setMovies = movies => ({\r\n  type: MOVIES.LOAD_SUCCESS,\r\n  movies\r\n});\r\nexport const setError = err => ({\r\n  type: MOVIES.LOAD_FAIL,\r\n  err\r\n});\r\n","import { takeEvery, take, put, call, select } from \"redux-saga/effects\";\r\nimport { MOVIES } from \"../constants\";\r\nimport { fetchMovies } from \"../../lib/api\";\r\nimport { setError, setMovies } from \"../actions\";\r\n\r\nconst getPage = state => state.nextPage;\r\n\r\n// worker saga\r\nfunction* handleMoviesLoad() {\r\n  try {\r\n    const page = yield select(getPage);\r\n    console.log(`page : ${page}`);\r\n    const { data } = yield call(fetchMovies, page);\r\n    // console.log(data.results);\r\n    yield put(setMovies(data.results));\r\n  } catch (err) {\r\n    // dispatch error\r\n    console.log(err.toString());\r\n    yield put(setError(err.toString()));\r\n  }\r\n}\r\n\r\n// watcher saga\r\nfunction* watchMoviesLoad() {\r\n  yield takeEvery(MOVIES.LOAD, handleMoviesLoad);\r\n}\r\n\r\n// watcher saga -> actions -> worker saga\r\n\r\nexport default watchMoviesLoad;\r\n","import React from \"react\";\r\n\r\nimport \"../style/card.css\";\r\n\r\nconst Card = ({ movie }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt={movie.title}\r\n        width=\"100%\"\r\n        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n      />\r\n      <h3 style={{ textAlign: \"center\" }}>{movie.title}</h3>\r\n      <span style={{ textAlign: \"center\" }}>{movie.release_date}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport Card from \"./card\";\r\n\r\nimport \"../style/card-list.css\";\r\n\r\nconst CardList = ({ movies }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {movies.map(movie => (\r\n        <Card key={movie.id} movie={movie} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState, useEffect, useImperativeHandle } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport CardList from \"../components/card-list\";\r\n\r\nimport { loadMovies } from \"../redux/actions\";\r\n\r\nconst Movies = () => {\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector(state => state.movies);\r\n  const stateError = useSelector(state => state.error);\r\n  const isLoading = useSelector(state => state.isLoading);\r\n\r\n  // https://upmostly.com/tutorials/build-an-infinite-scroll-component-in-react-using-react-hooks\r\n  const handleScroll = () => {\r\n    const current = window.innerHeight + document.documentElement.scrollTop;\r\n    console.log(`current: ${current}`);\r\n    const height = document.documentElement.offsetHeight;\r\n    console.log(`height: ${height}`);\r\n    if (current < height) return;\r\n\r\n    if (!isLoading) {\r\n      console.log(\"Fetch more list items!\");\r\n      dispatch(loadMovies());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMovies());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [handleScroll]);\r\n\r\n  const handleLoadImages = () => {\r\n    dispatch(loadMovies());\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 style={{ textAlign: \"center\" }}> Movie list (themoviedb) </h1>\r\n      <CardList movies={movies} />\r\n      {stateError && <h2>{stateError}</h2>}\r\n      {/* <button\r\n        onClick={handleLoadImages}\r\n        style={{ width: \"100%\", height: \"30px\", backgroundColor: \"green\" }}\r\n      >\r\n        {\" \"}\r\n        Load Movies\r\n      </button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport devToolsEnhancer from \"remote-redux-devtools\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./redux/reducers/index\";\nimport rootSaga from \"./redux/saga/moviesSaga\";\nimport \"./index.css\";\n\nimport Counter from \"./Counter\";\nimport Movies from \"./view/movies\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    devToolsEnhancer()\n  )\n);\nsagaMiddleware.run(rootSaga);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      {/* <Counter /> */}\n      <Movies />\n    </Provider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}